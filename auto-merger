#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# The MIT License (MIT)
#
# Copyright (c) 2025  Authors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Authors: Petr Hracek <phracek@redhat.com>

import logging
import click
import sys
import requests

from auto_merger.config import Config
from auto_merger.custom_logger import setup_logger
from auto_merger.utils import check_mandatory_config_fields
from auto_merger.cli.github_checker import github_checker
from auto_merger.cli.gitlab_checker import gitlab_checker
from auto_merger.cli.merger import merger
from auto_merger.exceptions import AutoMergerConfigException

requests.packages.urllib3.disable_warnings()

logger = logging.getLogger(__name__)


@click.group("auto-merger")
@click.option("-d", "--debug", is_flag=True, default=False, help="Enable debug logs")
@click.pass_context
def auto_merger(ctx, debug):
    if debug:
        logger = setup_logger(level=logging.DEBUG)
    else:
        logger = setup_logger(level=logging.INFO)
    try:
        c = Config.get_default_config()
        if not c:
            logger.debug("Default config does not exist")
            sys.exit(10)
        if not check_mandatory_config_fields(c):
            logger.error("Yaml does not contain some mandatory fields. See output")
            sys.exit(2)
    except AutoMergerConfigException:
        sys.exit(10)
    ctx.obj = c
    ctx.obj.debug = debug
    logger.debug("Let's get analyses")


auto_merger.add_command(github_checker)
auto_merger.add_command(gitlab_checker)
auto_merger.add_command(merger)


if __name__ == "__main__":
    auto_merger()
